{"ast":null,"code":"var _jsxFileName = \"/Users/yungwingwa/my-app/src/pages/itemList.js\";\nimport React from \"react\";\nimport Item from \"./item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet row = 0;\nlet column = 0;\n\nfunction recurTrialAdd(index) {} // function recurTrialHori(listitem){\n//   var isSimpleArray=true;\n//   listitem.forEach(element => {\n//     if (Array.isArray(element)){\n//      isSimpleArray=false;\n//     }\n//   }); \n//   console.log(\"isSimpleArray\",isSimpleArray);\n//   if(isSimpleArray) return listitem.map((item, index)=><div className=\"Item\" key={index}>item</div>)\n//   return \n// }\n\n\nfunction recur(listitem) {\n  //  return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //     <div className=\"itemRow\">{item[0]}{recur(item.slice(1))}</div>: item}</div>))}</div>\n  return; //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n} // export a home page component\n\n\nexport default class Items extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]],\n      row: 0,\n      column: 0 //listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], \"b4\"]]\n      //listitems: [\"sa\", [\"b1\", [\"b2\",\"b2\", \"b3\"], [\"b4\", \"b4\"]], \"c\"]\n\n    };\n    this.recurTrial = this.recurTrial.bind(this);\n    this.addChild = this.addChild.bind(this); //this.recurTrial=this.recurTrial.bind(recurTrial);\n  }\n\n  recurTrial(listitem, isColumn = true) {\n    // console.log(this.state.row);\n    var isSimpleArray = true;\n    listitem.forEach(element => {\n      if (Array.isArray(element)) {\n        isSimpleArray = false;\n      }\n    });\n\n    if (isSimpleArray) {\n      console.log(\"isSimpleArray\", listitem);\n      console.log('isColumn: ', isColumn);\n\n      if (isColumn) {\n        // this.state.column++;\n        console.log('column: ', column);\n        let jsx = listitem.map((item, index) => this.renderItem(index, row + index, column, item));\n        column++;\n        return jsx;\n      } else {\n        // this.state.row++;\n        let jsx = listitem.map((item, index) => this.renderItem(index, row, column + index, item));\n        row++; // return listitem.map((item, index) => this.renderItem(index, this.state.row, this.state.column + index, item))\n\n        return jsx;\n      }\n    } //if(isSimpleArray) return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"item\" key={index}>{item}</div>)}</div>\n    //return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"itemRow\" key={index}>{Array.isArray(item) ?  recurTrial(item): <div className=\"Item\">{item}</div>}</div>)}</div>\n\n\n    if (isColumn) {\n      // this.setState({\n      //   column: this.state.column+1\n      // });\n      // this.state.column++;\n      console.log('column: ', column);\n\n      let jsx = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemColumns\",\n        children: listitem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemRow\",\n          children: Array.isArray(item) ? this.recurTrial(item, false) : this.renderItem(index, row, column + index, item)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 77\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n\n      column++;\n      return jsx; // return <div className=\"itemColumns\">{listitem.map((item, index) => <div className=\"itemRow\" key={index}>{Array.isArray(item) ? this.recurTrial(item, false) : this.renderItem(index, this.state.row, this.state.column + index, item)}</div>)}</div>\n    } else {\n      // this.setState({\n      //   row: this.state.row+1\n      // });\n      let jsx = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemRow\",\n        children: listitem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemColumns\",\n          children: Array.isArray(item) ? this.recurTrial(item) : this.renderItem(index, row + index, column, item)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 73\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this);\n\n      row++; // this.state.row++;\n\n      return jsx; // return <div className=\"itemRow\">{listitem.map((item, index) => <div className=\"itemColumns\" key={index}>{Array.isArray(item) ? this.recurTrial(item) : this.renderItem(index, this.state.row + index, this.state.column, item)}</div>)}</div>\n    } //  listitems: [\"sa\", [\"b1\", \"b1\"]]\n    //  <div className=\"itemColumns\">\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">sa</div>\n    //    </div>\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">b1</div>\n    //      <div className=\"Item\">b1</div>\n    //    </div>\n    //  </div>\n    // listitems: [\"sa\", [[\"b1\", \"b2\"], \"b1\"]]\n    // <div className=\"itemColumns\">\n    //   <div className=\"itemRow\">\n    //     <div className=\"Item\">sa</div>\n    //   </div>\n    //   <div className=\"itemRow\">\n    //     <div className=\"itemColumns\">\n    //       <div className=\"Item\">b1</div>\n    //       <div className=\"Item\">b2</div>\n    //     </div>\n    //     <div className=\"Item\">b1</div>\n    //   </div>\n    // </div>\n    //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n    //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n\n  }\n\n  addChild() {\n    console.log('ds');\n  }\n\n  handleClick(row, column) {\n    const listitems1 = this.state.listitems.slice();\n    listitems1[column] = \"ssdds\";\n    this.setState({\n      listitems: listitems1\n    }); // this.setState({listitems: [\"saddssd\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]]});\n    // console.log(2, this.state.listitems);\n  }\n\n  renderItem(index, row, column, item) {\n    return /*#__PURE__*/_jsxDEV(Item, {\n      rownum: row,\n      columnnum: column,\n      title: item,\n      onClick: () => this.handleClick(row, column)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    let jsx = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listitem\",\n      children: this.recurTrial(this.state.listitems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }, this);\n\n    row = 0;\n    column = 0;\n    return jsx;\n  }\n\n}","map":{"version":3,"sources":["/Users/yungwingwa/my-app/src/pages/itemList.js"],"names":["React","Item","row","column","recurTrialAdd","index","recur","listitem","Items","Component","constructor","props","state","listitems","recurTrial","bind","addChild","isColumn","isSimpleArray","forEach","element","Array","isArray","console","log","jsx","map","item","renderItem","handleClick","listitems1","slice","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Item from \"./item\";\n\nlet row = 0;\nlet column = 0;\n\nfunction recurTrialAdd(index) {\n}\n\n// function recurTrialHori(listitem){\n//   var isSimpleArray=true;\n//   listitem.forEach(element => {\n//     if (Array.isArray(element)){\n//      isSimpleArray=false;\n//     }\n//   }); \n\n//   console.log(\"isSimpleArray\",isSimpleArray);\n//   if(isSimpleArray) return listitem.map((item, index)=><div className=\"Item\" key={index}>item</div>)\n//   return \n// }\n\nfunction recur(listitem) {\n  //  return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //     <div className=\"itemRow\">{item[0]}{recur(item.slice(1))}</div>: item}</div>))}</div>\n  return;\n\n  //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n}\n\n// export a home page component\nexport default class Items extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]],\n      row: 0,\n      column: 0\n      //listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], \"b4\"]]\n      //listitems: [\"sa\", [\"b1\", [\"b2\",\"b2\", \"b3\"], [\"b4\", \"b4\"]], \"c\"]\n    };\n    this.recurTrial = this.recurTrial.bind(this);\n    this.addChild = this.addChild.bind(this);\n    //this.recurTrial=this.recurTrial.bind(recurTrial);\n  }\n\n  recurTrial(listitem, isColumn = true) {\n    // console.log(this.state.row);\n    var isSimpleArray = true;\n    listitem.forEach(element => {\n      if (Array.isArray(element)) {\n        isSimpleArray = false;\n      }\n    });\n    if (isSimpleArray) {\n      console.log(\"isSimpleArray\", listitem);\n      console.log('isColumn: ', isColumn);\n      if (isColumn) {\n        // this.state.column++;\n        console.log('column: ', column);\n        let jsx = listitem.map((item, index) => this.renderItem(index, row + index, column, item));\n        column++;\n        return jsx;\n      }\n      else {\n        // this.state.row++;\n        let jsx = listitem.map((item, index) => this.renderItem(index, row, column + index, item));\n        row++;\n        // return listitem.map((item, index) => this.renderItem(index, this.state.row, this.state.column + index, item))\n        return jsx;\n      }\n    }\n\n    //if(isSimpleArray) return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"item\" key={index}>{item}</div>)}</div>\n    //return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"itemRow\" key={index}>{Array.isArray(item) ?  recurTrial(item): <div className=\"Item\">{item}</div>}</div>)}</div>\n    if (isColumn) {\n      // this.setState({\n      //   column: this.state.column+1\n      // });\n      // this.state.column++;\n      console.log('column: ', column);\n      let jsx = <div className=\"itemColumns\">{listitem.map((item, index) => <div className=\"itemRow\" key={index}>{Array.isArray(item) ? this.recurTrial(item, false) : this.renderItem(index, row, column + index, item)}</div>)}</div>;\n      column++;\n      return jsx;\n      // return <div className=\"itemColumns\">{listitem.map((item, index) => <div className=\"itemRow\" key={index}>{Array.isArray(item) ? this.recurTrial(item, false) : this.renderItem(index, this.state.row, this.state.column + index, item)}</div>)}</div>\n    }\n    else {\n      // this.setState({\n      //   row: this.state.row+1\n      // });\n      let jsx = <div className=\"itemRow\">{listitem.map((item, index) => <div className=\"itemColumns\" key={index}>{Array.isArray(item) ? this.recurTrial(item) : this.renderItem(index, row + index, column, item)}</div>)}</div>;\n      row++;\n      // this.state.row++;\n      return jsx;\n      // return <div className=\"itemRow\">{listitem.map((item, index) => <div className=\"itemColumns\" key={index}>{Array.isArray(item) ? this.recurTrial(item) : this.renderItem(index, this.state.row + index, this.state.column, item)}</div>)}</div>\n    }\n\n    //  listitems: [\"sa\", [\"b1\", \"b1\"]]\n    //  <div className=\"itemColumns\">\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">sa</div>\n    //    </div>\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">b1</div>\n    //      <div className=\"Item\">b1</div>\n    //    </div>\n    //  </div>\n\n    // listitems: [\"sa\", [[\"b1\", \"b2\"], \"b1\"]]\n    // <div className=\"itemColumns\">\n    //   <div className=\"itemRow\">\n    //     <div className=\"Item\">sa</div>\n    //   </div>\n    //   <div className=\"itemRow\">\n    //     <div className=\"itemColumns\">\n    //       <div className=\"Item\">b1</div>\n    //       <div className=\"Item\">b2</div>\n    //     </div>\n    //     <div className=\"Item\">b1</div>\n    //   </div>\n    // </div>\n\n    //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n    //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n  }\n\n  addChild() {\n    console.log('ds');\n  }\n\n  handleClick(row, column) {\n    const listitems1 = this.state.listitems.slice();\n    listitems1[column] = \"ssdds\";\n    this.setState({ listitems: listitems1 });\n    // this.setState({listitems: [\"saddssd\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]]});\n    // console.log(2, this.state.listitems);\n  }\n\n  renderItem(index, row, column, item) {\n    return (\n      <Item\n        key={index}\n        rownum={row}\n        columnnum={column}\n        title={item}\n        onClick={() => this.handleClick(row, column)}\n      />\n    );\n  }\n\n  render() {\n    let jsx = <div className=\"listitem\">\n      {this.recurTrial(this.state.listitems)}\n    </div>;\n    row = 0;\n    column = 0;\n    return jsx;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}