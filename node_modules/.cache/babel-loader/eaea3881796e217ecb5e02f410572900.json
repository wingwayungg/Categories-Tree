{"ast":null,"code":"var _jsxFileName = \"/Users/yungwingwa/my-app/src/pages/itemList.js\";\nimport React from \"react\";\nimport Item from \"./item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet row = 0;\nlet column = 0;\n\nfunction recurTrialAdd(index) {} // function recurTrialHori(listitem){\n//   var isSimpleArray=true;\n//   listitem.forEach(element => {\n//     if (Array.isArray(element)){\n//      isSimpleArray=false;\n//     }\n//   }); \n//   console.log(\"isSimpleArray\",isSimpleArray);\n//   if(isSimpleArray) return listitem.map((item, index)=><div className=\"Item\" key={index}>item</div>)\n//   return \n// }\n\n\nfunction recur(listitem) {\n  //  return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //     <div className=\"itemRow\">{item[0]}{recur(item.slice(1))}</div>: item}</div>))}</div>\n  return; //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n} // export a home page component\n\n\nexport default class Items extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]],\n      row: 0,\n      column: 0 //listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], \"b4\"]]\n      //listitems: [\"sa\", [\"b1\", [\"b2\",\"b2\", \"b3\"], [\"b4\", \"b4\"]], \"c\"]\n\n    };\n    this.recurTrial = this.recurTrial.bind(this); //this.recurTrial=this.recurTrial.bind(recurTrial);\n  }\n\n  recurTrial(listitem, isColumn = true) {\n    // console.log(this.state.row);\n    var isSimpleArray = true;\n    listitem.forEach(element => {\n      if (Array.isArray(element)) {\n        isSimpleArray = false;\n      }\n    });\n\n    if (isSimpleArray) {\n      if (isColumn) {\n        return listitem.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n          rownum: row + index,\n          columnnum: column,\n          title: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 46\n        }, this));\n      } else {\n        return listitem.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n          rownum: row,\n          columnnum: column + index,\n          title: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 46\n        }, this));\n      }\n    } //if(isSimpleArray) return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"item\" key={index}>{item}</div>)}</div>\n    //return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"itemRow\" key={index}>{Array.isArray(item) ?  recurTrial(item): <div className=\"Item\">{item}</div>}</div>)}</div>\n\n\n    if (isColumn) {\n      this.column++;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemColumns\",\n        children: listitem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemRow\",\n          children: Array.isArray(item) ? this.recurTrial(item, false) : /*#__PURE__*/_jsxDEV(Item, {\n            rownum: row,\n            columnnum: column,\n            title: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 165\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 74\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    } else {\n      this.row++;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemRow\",\n        children: listitem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemColumns\",\n          children: Array.isArray(item) ? this.recurTrial(item) : /*#__PURE__*/_jsxDEV(Item, {\n            rownum: row,\n            columnnum: column,\n            title: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 158\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 70\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } //  listitems: [\"sa\", [\"b1\", \"b1\"]]\n    //  <div className=\"itemColumns\">\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">sa</div>\n    //    </div>\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">b1</div>\n    //      <div className=\"Item\">b1</div>\n    //    </div>\n    //  </div>\n    // listitems: [\"sa\", [[\"b1\", \"b2\"], \"b1\"]]\n    // <div className=\"itemColumns\">\n    //   <div className=\"itemRow\">\n    //     <div className=\"Item\">sa</div>\n    //   </div>\n    //   <div className=\"itemRow\">\n    //     <div className=\"itemColumns\">\n    //       <div className=\"Item\">b1</div>\n    //       <div className=\"Item\">b2</div>\n    //     </div>\n    //     <div className=\"Item\">b1</div>\n    //   </div>\n    // </div>\n    //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n    //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listitem\",\n      children: this.recurTrial(this.state.listitems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yungwingwa/my-app/src/pages/itemList.js"],"names":["React","Item","row","column","recurTrialAdd","index","recur","listitem","Items","Component","constructor","props","state","listitems","recurTrial","bind","isColumn","isSimpleArray","forEach","element","Array","isArray","map","item","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Item from \"./item\";\n\nlet row = 0;\nlet column = 0;\n\nfunction recurTrialAdd(index) {\n}\n\n// function recurTrialHori(listitem){\n//   var isSimpleArray=true;\n//   listitem.forEach(element => {\n//     if (Array.isArray(element)){\n//      isSimpleArray=false;\n//     }\n//   }); \n\n//   console.log(\"isSimpleArray\",isSimpleArray);\n//   if(isSimpleArray) return listitem.map((item, index)=><div className=\"Item\" key={index}>item</div>)\n//   return \n// }\n\nfunction recur(listitem) {\n  //  return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //     <div className=\"itemRow\">{item[0]}{recur(item.slice(1))}</div>: item}</div>))}</div>\n  return;\n\n  //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n}\n\n// export a home page component\nexport default class Items extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]],\n      row: 0,\n      column: 0\n      //listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], \"b4\"]]\n      //listitems: [\"sa\", [\"b1\", [\"b2\",\"b2\", \"b3\"], [\"b4\", \"b4\"]], \"c\"]\n    };\n    this.recurTrial = this.recurTrial.bind(this);\n    //this.recurTrial=this.recurTrial.bind(recurTrial);\n  }\n\n  recurTrial(listitem, isColumn = true) {\n    // console.log(this.state.row);\n    var isSimpleArray = true;\n    listitem.forEach(element => {\n      if (Array.isArray(element)) {\n        isSimpleArray = false;\n      }\n    });\n    if (isSimpleArray) {\n      if(isColumn){\n        return listitem.map((item, index) => <Item key={index} rownum={row+index} columnnum={column} title={item}></Item>)\n      }\n      else{\n        return listitem.map((item, index) => <Item key={index} rownum={row} columnnum={column+index} title={item}></Item>)\n      }\n    }\n  \n    //if(isSimpleArray) return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"item\" key={index}>{item}</div>)}</div>\n    //return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"itemRow\" key={index}>{Array.isArray(item) ?  recurTrial(item): <div className=\"Item\">{item}</div>}</div>)}</div>\n    if (isColumn) {\n      this.column++;\n      return <div className=\"itemColumns\">{listitem.map((item, index) => <div className=\"itemRow\" key={index}>{Array.isArray(item) ? this.recurTrial(item, false) : <Item key={index} rownum={row} columnnum={column} title={item}></Item>}</div>)}</div>\n    }\n    else {\n      this.row++;\n      return <div className=\"itemRow\">{listitem.map((item, index) => <div className=\"itemColumns\" key={index}>{Array.isArray(item) ? this.recurTrial(item) : <Item key={index} rownum={row} columnnum={column} title={item}></Item>}</div>)}</div>\n    }\n  \n    //  listitems: [\"sa\", [\"b1\", \"b1\"]]\n    //  <div className=\"itemColumns\">\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">sa</div>\n    //    </div>\n    //    <div className=\"itemRow\">\n    //      <div className=\"Item\">b1</div>\n    //      <div className=\"Item\">b1</div>\n    //    </div>\n    //  </div>\n  \n    // listitems: [\"sa\", [[\"b1\", \"b2\"], \"b1\"]]\n    // <div className=\"itemColumns\">\n    //   <div className=\"itemRow\">\n    //     <div className=\"Item\">sa</div>\n    //   </div>\n    //   <div className=\"itemRow\">\n    //     <div className=\"itemColumns\">\n    //       <div className=\"Item\">b1</div>\n    //       <div className=\"Item\">b2</div>\n    //     </div>\n    //     <div className=\"Item\">b1</div>\n    //   </div>\n    // </div>\n  \n    //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n    //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n  }\n\n  render() {\n    return (\n      <div className=\"listitem\">\n        {this.recurTrial(this.state.listitems)}\n        {/* {this.state.listitems.map((listitem, index) => (\n          <div className=\"itemColumn\" key={index}>\n            {Array.isArray(listitem) ?  \n                    recur(listitem): listitem}\n          </div>\n        ))} */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}