{"ast":null,"code":"var _jsxFileName = \"/Users/yungwingwa/my-app/src/pages/itemList.js\";\nimport React from \"react\";\nimport Item from \"./item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet row = -1;\nlet column = -1;\n\nfunction recurTrial(listitem, isColumn = true) {\n  var isSimpleArray = true;\n  listitem.forEach(element => {\n    if (Array.isArray(element)) {\n      isSimpleArray = false;\n    }\n  });\n\n  if (isSimpleArray) {\n    if (isColumn) {\n      return listitem.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n        rownum: row + index,\n        columnnum: column,\n        title: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 44\n      }, this));\n    }\n  } //if(isSimpleArray) return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"item\" key={index}>{item}</div>)}</div>\n  //return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"itemRow\" key={index}>{Array.isArray(item) ?  recurTrial(item): <div className=\"Item\">{item}</div>}</div>)}</div>\n\n\n  if (isColumn) {\n    column++;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemColumns\",\n      children: listitem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemRow\",\n        children: Array.isArray(item) ? recurTrial(item, false) : /*#__PURE__*/_jsxDEV(Item, {\n          rownum: row,\n          columnnum: column,\n          title: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 158\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 72\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  } else {\n    row++;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemRow\",\n      children: listitem.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemColumns\",\n        children: Array.isArray(item) ? recurTrial(item) : /*#__PURE__*/_jsxDEV(Item, {\n          rownum: row,\n          columnnum: column,\n          title: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 151\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 68\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  } //  listitems: [\"sa\", [\"b1\", \"b1\"]]\n  //  <div className=\"itemColumns\">\n  //    <div className=\"itemRow\">\n  //      <div className=\"Item\">sa</div>\n  //    </div>\n  //    <div className=\"itemRow\">\n  //      <div className=\"Item\">b1</div>\n  //      <div className=\"Item\">b1</div>\n  //    </div>\n  //  </div>\n  // listitems: [\"sa\", [[\"b1\", \"b2\"], \"b1\"]]\n  // <div className=\"itemColumns\">\n  //   <div className=\"itemRow\">\n  //     <div className=\"Item\">sa</div>\n  //   </div>\n  //   <div className=\"itemRow\">\n  //     <div className=\"itemColumns\">\n  //       <div className=\"Item\">b1</div>\n  //       <div className=\"Item\">b2</div>\n  //     </div>\n  //     <div className=\"Item\">b1</div>\n  //   </div>\n  // </div>\n  //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n\n}\n\nfunction recurTrialAdd(index) {} // function recurTrialHori(listitem){\n//   var isSimpleArray=true;\n//   listitem.forEach(element => {\n//     if (Array.isArray(element)){\n//      isSimpleArray=false;\n//     }\n//   }); \n//   console.log(\"isSimpleArray\",isSimpleArray);\n//   if(isSimpleArray) return listitem.map((item, index)=><div className=\"Item\" key={index}>item</div>)\n//   return \n// }\n\n\nfunction recur(listitem) {\n  //  return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //     <div className=\"itemRow\">{item[0]}{recur(item.slice(1))}</div>: item}</div>))}</div>\n  return; //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n} // export a home page component\n\n\nexport default class Items extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]],\n      rownum: 0 //listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], \"b4\"]]\n      //listitems: [\"sa\", [\"b1\", [\"b2\",\"b2\", \"b3\"], [\"b4\", \"b4\"]], \"c\"]\n\n    }; //this.recurTrial=this.recurTrial.bind(recurTrial);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listitem\",\n      children: recurTrial(this.state.listitems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yungwingwa/my-app/src/pages/itemList.js"],"names":["React","Item","row","column","recurTrial","listitem","isColumn","isSimpleArray","forEach","element","Array","isArray","map","item","index","recurTrialAdd","recur","Items","Component","constructor","props","state","listitems","rownum","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Item from \"./item\";\n\nlet row = -1;\nlet column = -1;\n\nfunction recurTrial(listitem, isColumn = true) {\n  var isSimpleArray = true;\n  listitem.forEach(element => {\n    if (Array.isArray(element)) {\n      isSimpleArray = false;\n    }\n  });\n  if (isSimpleArray) {\n    if(isColumn){\n      return listitem.map((item, index) => <Item key={index} rownum={row+index} columnnum={column} title={item}></Item>)\n    }\n  }\n\n  //if(isSimpleArray) return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"item\" key={index}>{item}</div>)}</div>\n  //return <div className=\"itemColumns\">{listitem.map((item, index) =><div className=\"itemRow\" key={index}>{Array.isArray(item) ?  recurTrial(item): <div className=\"Item\">{item}</div>}</div>)}</div>\n  if (isColumn) {\n    column++;\n    return <div className=\"itemColumns\">{listitem.map((item, index) => <div className=\"itemRow\" key={index}>{Array.isArray(item) ? recurTrial(item, false) : <Item key={index} rownum={row} columnnum={column} title={item}></Item>}</div>)}</div>\n  }\n  else {\n    row++;\n    return <div className=\"itemRow\">{listitem.map((item, index) => <div className=\"itemColumns\" key={index}>{Array.isArray(item) ? recurTrial(item) : <Item key={index} rownum={row} columnnum={column} title={item}></Item>}</div>)}</div>\n  }\n\n  //  listitems: [\"sa\", [\"b1\", \"b1\"]]\n  //  <div className=\"itemColumns\">\n  //    <div className=\"itemRow\">\n  //      <div className=\"Item\">sa</div>\n  //    </div>\n  //    <div className=\"itemRow\">\n  //      <div className=\"Item\">b1</div>\n  //      <div className=\"Item\">b1</div>\n  //    </div>\n  //  </div>\n\n  // listitems: [\"sa\", [[\"b1\", \"b2\"], \"b1\"]]\n  // <div className=\"itemColumns\">\n  //   <div className=\"itemRow\">\n  //     <div className=\"Item\">sa</div>\n  //   </div>\n  //   <div className=\"itemRow\">\n  //     <div className=\"itemColumns\">\n  //       <div className=\"Item\">b1</div>\n  //       <div className=\"Item\">b2</div>\n  //     </div>\n  //     <div className=\"Item\">b1</div>\n  //   </div>\n  // </div>\n\n  //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n}\n\nfunction recurTrialAdd(index) {\n}\n\n// function recurTrialHori(listitem){\n//   var isSimpleArray=true;\n//   listitem.forEach(element => {\n//     if (Array.isArray(element)){\n//      isSimpleArray=false;\n//     }\n//   }); \n\n//   console.log(\"isSimpleArray\",isSimpleArray);\n//   if(isSimpleArray) return listitem.map((item, index)=><div className=\"Item\" key={index}>item</div>)\n//   return \n// }\n\nfunction recur(listitem) {\n  //  return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //     <div className=\"itemRow\">{item[0]}{recur(item.slice(1))}</div>: item}</div>))}</div>\n  return;\n\n  //return <div className=\"itemColumns\">{listitem.map((item, index) => (<div key={index}> {Array.isArray(item) ?  \n  //  <div class=\"itemClass\">{recur(item)}</div>: item}</div>))}</div>\n}\n\n// export a home page component\nexport default class Items extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], [\"b4\", \"b4\", \"b4\"]]],\n      rownum: 0\n      //listitems: [\"sa\", [\"b1\", [\"b2\", \"b3\"], \"b4\"]]\n      //listitems: [\"sa\", [\"b1\", [\"b2\",\"b2\", \"b3\"], [\"b4\", \"b4\"]], \"c\"]\n    };\n    //this.recurTrial=this.recurTrial.bind(recurTrial);\n  }\n\n  render() {\n    return (\n      <div className=\"listitem\">\n        {recurTrial(this.state.listitems)}\n        {/* {this.state.listitems.map((listitem, index) => (\n          <div className=\"itemColumn\" key={index}>\n            {Array.isArray(listitem) ?  \n                    recur(listitem): listitem}\n          </div>\n        ))} */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}